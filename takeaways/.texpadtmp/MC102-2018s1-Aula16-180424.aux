\relax 
\providecommand\hyper@newdestlabel[2]{}
\catcode `"\active 
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\providecommand \oddpage@label [2]{}
\select@language{brazil}
\@writefile{toc}{\select@language{brazil}}
\@writefile{lof}{\select@language{brazil}}
\@writefile{lot}{\select@language{brazil}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Fun\IeC {\c c}\IeC {\~o}es}{1}{section.1}}
\newlabel{funuxe7uxf5es}{{1}{1}{Funções}{section.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Como definir e chamar uma nova fun\IeC {\c c}\IeC {\~a}o}{1}{subsection.1.1}}
\newlabel{como-definir-e-chamar-uma-nova-funuxe7uxe3o}{{1.1}{1}{Como definir e chamar uma nova função}{subsection.1.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.1}Exemplo: Uma fun\IeC {\c c}\IeC {\~a}o para calcular o dobro de um n\IeC {\'u}mero}{1}{subsubsection.1.1.1}}
\newlabel{exemplo-uma-funuxe7uxe3o-para-calcular-o-dobro-de-um-nuxfamero}{{1.1.1}{1}{Exemplo: Uma função para calcular o dobro de um número}{subsubsection.1.1.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Uma fun\IeC {\c c}\IeC {\~a}o pode n\IeC {\~a}o ter uma \emph  {lista de par\IeC {\^a}metros}}{2}{subsection.1.2}}
\newlabel{uma-funuxe7uxe3o-pode-nuxe3o-ter-uma-lista-de-paruxe2metros}{{1.2}{2}{\texorpdfstring {Uma função pode não ter uma \emph {lista de parâmetros}}{Uma função pode não ter uma lista de parâmetros}}{subsection.1.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.2.1}Exemplo: Ler e validar uma entrada num\IeC {\'e}rica}{2}{subsubsection.1.2.1}}
\newlabel{exemplo-ler-e-validar-uma-entrada-numuxe9rica}{{1.2.1}{2}{Exemplo: Ler e validar uma entrada numérica}{subsubsection.1.2.1}{}}
\newlabel{curiosidade-essa-funuxe7uxe3o-suxf3-aceita-inteiros-nuxe3o-negativos.-seria-possuxedvel-aceitar-um-nuxfamero-qualquer}{{1.2.1}{3}{\texorpdfstring {\textbf {Curiosidade:} Essa função só aceita inteiros não-negativos. Seria possível aceitar um número qualquer?}{Curiosidade: Essa função só aceita inteiros não-negativos. Seria possível aceitar um número qualquer?}}{section*.1}{}}
\@writefile{toc}{\contentsline {paragraph}{\textbf  {Curiosidade:} Essa fun\IeC {\c c}\IeC {\~a}o s\IeC {\'o} aceita inteiros n\IeC {\~a}o-negativos. Seria poss\IeC {\'\i }vel aceitar um n\IeC {\'u}mero qualquer?}{3}{section*.1}}
\newlabel{curiosidade-essa-funuxe7uxe3o-sempre-retorna-um-float.-seria-possuxedvel-retornar-um-tipo-mais-preciso}{{1.2.1}{3}{\texorpdfstring {\textbf {Curiosidade:} Essa função sempre retorna um \emph {float}. Seria possível retornar um tipo mais preciso?}{Curiosidade: Essa função sempre retorna um float. Seria possível retornar um tipo mais preciso?}}{section*.2}{}}
\@writefile{toc}{\contentsline {paragraph}{\textbf  {Curiosidade:} Essa fun\IeC {\c c}\IeC {\~a}o sempre retorna um \emph  {float}. Seria poss\IeC {\'\i }vel retornar um tipo mais preciso?}{3}{section*.2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.3}Uma fun\IeC {\c c}\IeC {\~a}o pode produzir um efeito sem retornar qualquer resultado}{4}{subsection.1.3}}
\newlabel{uma-funuxe7uxe3o-pode-produzir-um-efeito-sem-retornar-qualquer-resultado}{{1.3}{4}{Uma função pode produzir um efeito sem retornar qualquer resultado}{subsection.1.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.3.1}Exemplo: Exibir um cabe\IeC {\c c}alho}{4}{subsubsection.1.3.1}}
\newlabel{exemplo-exibir-um-cabeuxe7alho}{{1.3.1}{4}{Exemplo: Exibir um cabeçalho}{subsubsection.1.3.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.4}Uma fun\IeC {\c c}\IeC {\~a}o pode retornar mais do que um resultado}{4}{subsection.1.4}}
\newlabel{uma-funuxe7uxe3o-pode-retornar-mais-do-que-um-resultado}{{1.4}{4}{Uma função pode retornar mais do que um resultado}{subsection.1.4}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.4.1}Exemplo: Contar mai\IeC {\'u}sculas, min\IeC {\'u}sculas e outros caracteres numa \emph  {string}}{4}{subsubsection.1.4.1}}
\newlabel{exemplo-contar-maiuxfasculas-minuxfasculas-e-outros-caracteres-numa-string}{{1.4.1}{4}{\texorpdfstring {Exemplo: Contar maiúsculas, minúsculas e outros caracteres numa \emph {string}}{Exemplo: Contar maiúsculas, minúsculas e outros caracteres numa string}}{subsubsection.1.4.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.5}Uma fun\IeC {\c c}\IeC {\~a}o pode chamar outras fun\IeC {\c c}\IeC {\~o}es}{5}{subsection.1.5}}
\newlabel{uma-funuxe7uxe3o-pode-chamar-outras-funuxe7uxf5es}{{1.5}{5}{Uma função pode chamar outras funções}{subsection.1.5}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.5.1}Exemplo: Calcular a soma dos quadrados de tr\IeC {\^e}s par\IeC {\^a}metros num\IeC {\'e}ricos}{5}{subsubsection.1.5.1}}
\newlabel{exemplo-calcular-a-soma-dos-quadrados-de-truxeas-paruxe2metros-numuxe9ricos}{{1.5.1}{5}{Exemplo: Calcular a soma dos quadrados de três parâmetros numéricos}{subsubsection.1.5.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.6}Uma fun\IeC {\c c}\IeC {\~a}o pode chamar a si mesma}{5}{subsection.1.6}}
\newlabel{uma-funuxe7uxe3o-pode-chamar-a-si-mesma}{{1.6}{5}{Uma função pode chamar a si mesma}{subsection.1.6}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.6.1}Exemplo: Calcular o fatorial de um inteiro n\IeC {\~a}o-negativo}{5}{subsubsection.1.6.1}}
\newlabel{exemplo-calcular-o-fatorial-de-um-inteiro-nuxe3o-negativo}{{1.6.1}{5}{Exemplo: Calcular o fatorial de um inteiro não-negativo}{subsubsection.1.6.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.7}Uma fun\IeC {\c c}\IeC {\~a}o pode definir vari\IeC {\'a}veis locais}{10}{subsection.1.7}}
\newlabel{uma-funuxe7uxe3o-pode-definir-variuxe1veis-locais}{{1.7}{10}{Uma função pode definir variáveis locais}{subsection.1.7}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.7.1}Exemplo: Verificar se uma cadeia de caracteres \IeC {\'e} pal\IeC {\'\i }ndroma}{12}{subsubsection.1.7.1}}
\newlabel{exemplo-verificar-se-uma-cadeia-de-caracteres-uxe9-paluxedndroma}{{1.7.1}{12}{Exemplo: Verificar se uma cadeia de caracteres é palíndroma}{subsubsection.1.7.1}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.8}Mais exemplos...}{13}{subsection.1.8}}
\newlabel{mais-exemplos...}{{1.8}{13}{Mais exemplos..}{subsection.1.8}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.8.1}Calcular o maior de tr\IeC {\^e}s n\IeC {\'u}meros}{13}{subsubsection.1.8.1}}
\newlabel{calcular-o-maior-de-truxeas-nuxfameros}{{1.8.1}{13}{Calcular o maior de três números}{subsubsection.1.8.1}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.8.2}Inverter uma cadeia de caracteres}{14}{subsubsection.1.8.2}}
\newlabel{inverter-uma-cadeia-de-caracteres}{{1.8.2}{14}{Inverter uma cadeia de caracteres}{subsubsection.1.8.2}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.8.3}Ler uma lista e retornar outra sem os elementos repetidos na primeira}{15}{subsubsection.1.8.3}}
\newlabel{ler-uma-lista-e-retornar-outra-sem-os-elementos-repetidos-na-primeira}{{1.8.3}{15}{Ler uma lista e retornar outra sem os elementos repetidos na primeira}{subsubsection.1.8.3}{}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.8.4}Exibir as \(n\) primeiras linhas do ``tri\IeC {\^a}ngulo de Pascal''}{16}{subsubsection.1.8.4}}
\newlabel{exibir-as-n-primeiras-linhas-do-triuxe2ngulo-de-pascal}{{1.8.4}{16}{\texorpdfstring {Exibir as \(n\) primeiras linhas do ``triângulo de Pascal''}{Exibir as n primeiras linhas do ``triângulo de Pascal''}}{subsubsection.1.8.4}{}}
